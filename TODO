Neue TODOs sollten in Trac eingetragen werden. 

== Critical (before release) ==

* No "land" button if display date is not today
* Add a landing time to a flight of another date => date correct?
* Hide towpilot fields if towpilot not recorded
* Towpilot not given is not an error without record_towpilot
* List buttons deleted?
* Splash screen (QSplashScreen)

Documentation:
 INSTALL:
 8. Client einrichten
   - Für Datumseinstellung:
     In /etc/sudoers eintragen:
       startkladde  ALL=NOPASSWD:/bin/date
       startkladde  ALL=NOPASSWD:/etc/init.d/hwclock.sh stop

Default-Config: Plugins (metar, regenrader) eintragen

See also Database.cpp


== Major (important) ==

Plugin interface:
* "Protocol" like for weather plugin for all plugins
* Better escaping
* Configuration for plugins, e. g. longitude for sunset time correction
* Synchronize plugin update with clock
* Graphical wind display

Flugbuch (Vorschlag eines Fluglehrers):
* Ausgabe Anzahl Landungen (Interessant bei Platzrunden mit dem Motorflieger)
* Zusammenfassung von Fluglehrerstarts wie folgt: Alle Starts eines Tages mit
  einem Flugzeugkennzeichen ergeben eine Zeile. In der Zeile Begleiter steht
  eine durch Kommas getrennte Liste aller Begleiter des Tages. Startzeit ist
  die erste Startzeit des Tages auf dem Kennzeichen. Landezeit ist die letzte
  Landezeit des Tages auf dem Kennzeichen. Anzahl Langungen = Anzahl in der
  Zeile zusammengefassten Flüge.

UI:
* keep landed flights visible for n minutes
* undo for depart/land
* Window with with long plugin labels

Models:
* Plane: can only do self launch (and select automatically, even on repeat)
* Plane, person, launch method: inactive (not displayed in select)

Config:
* Use YAML
* Config dialog
* Make Unix socket Name configurable machen
* Allow system wide config

Other:
* Time zone safety
* Write time to hwclock after change (?)
* Port to Windows
* Number of flying flights: also consider towplanes


== Minor ==

UI:
* Find flights (dates) by registration
* Flight editor: double click error list, jump to widget
* Show depart/land now/later when editing flight?

Database:
* Add indexes

Editors:
* Use QDataWidgetMapper for edit dialogs?

Implementation:
* Nested types: move to separate file to reduce dependencies (see dependencies
  marked "Required for ...")


== Tests ==

* Flight: all combinations of mode, started, landed, towflight
* Flight: also test inactive times (e. g. landing time given but leaving or not
  landed)
