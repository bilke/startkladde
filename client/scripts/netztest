#!/bin/bash
# Netztest
# Martin Herrmann
# 2004-03-15
# Prüft die Verfügbarkeit einiger Rechner/APs im lokalen Netzwerk
# Angepasst für die Installation Karlsruhe/Forchheim

color=true

kernlog="/var/log/kern.log"

if $color; then	#{{{
	col_def="\033[0m"
	col_notok="\033[31m"
	col_ok="\033[32m"
	col_err="\033[30;41m"
	col_host="\033[33m"
	col_bold="\033[1m"
fi
#}}}

echo_with_color()	#{{{
{
	unset opts
	if [ "$1" == "-n" ]; then opts="-n"; shift; fi
	color=$1; shift

	echo -e $opts "${color}$@${col_def}"
}
#}}}

echo_item()	#{{{
{
	echo_with_color -n "$@"
	echo -n ": "
}
#}}}

checkhost()	#{{{
{
	host=$1
	name=$2
	timeout=$3

	echo_item $col_host $name

	ping -c 1 ${host} >/dev/null 2>/dev/null &
	pid=$!
	# Ping-job disownen, damit die "terminated"-Meldung nicht ausgegeben wird.
	disown $pid

	sleep $timeout

	if ps -p ${pid} >/dev/null; then
		echo_with_color $col_notok "Nicht erreichbar"
		kill ${pid} >/dev/null 2>/dev/null
		return 1
	else
		echo_with_color $col_ok "OK"
		return 0
	fi
}
#}}}

echo
echo_with_color $col_bold "Startkladde - Netzwerkschnelldiagnose"
echo

echo_item $col_host "Link"

if [ -r "$kernlog" ]; then
	linktext=`grep "eth0: link" "$kernlog" 2>/dev/null |tail -n 1`

	if [ -z "$linktext" ]; then
		echo_with_color ${col_err} Lesefehler
	else
		if echo "$linktext" |grep "link up" >/dev/null; then
			echo_with_color -n $col_ok "OK"
			linkparams=`echo "$linktext" |sed "s/.*link up, //"`
			echo " (${linkparams})"
		else
			if echo "$linktext" |grep "link down" >/dev/null; then
				echo_with_color $col_notok "Nicht vorhanden"
			else
				echo_with_color -n $col_err "Unbekannt"
				echo " (${linktext})"
			fi
		fi
	fi
else
	echo_with_color ${col_err} "Zugriff verweigert"
fi

checkhost 127.0.0.1 localhost 1
checkhost 192.168.2.3 arthur 1
checkhost 192.168.2.4 uriel 1
checkhost 192.168.2.2 raphael 1
#checkhost 192.168.2.1 petrus 1
checkhost 192.168.1.2 adam 1

echo
echo "Return zum Beenden..."
read

